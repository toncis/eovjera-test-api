<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      throwExceptions="false" 
      internalLogLevel="info"
      internalLogToConsole="true"
      internalLogFile="">

  <!-- enable asp.net core layout renderers -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>


    <!-- <variable name="replacenewline" value="${replace:inner=${msg}:searchFor=\\r\\n|\\n:replaceWith=-&gt;:regex=true}" /> -->

    <variable name="HeaderLayout" value="*******************************************************************************${newline}" />
    <variable name="FooterLayout" value="${newline}*******************************************************************************" />
    <variable name="ExceptionHeader1Layout" value="----------------------------------------${newline}" />
    <variable name="ExceptionHeader2Layout" value="-----------------------------------------------------------------------------------------------${newline}" />

    <variable name="ExceptionLayout" value="${ExceptionHeader1Layout}Timestamp: ${longdate}${newline}Message: ${message}${newline}${ExceptionHeader2Layout}Category:${uppercase:${level}}${newline}Exception : ${exception:format=toString,Data:maxInnerExceptionLevel=10}${newline}${newline}Additional Info: ${newline}${newline}MachineName : ${machinename}${newline}FullName : ${assembly-version}${newline}AppDomainName : ${appdomain}${newline}ThreadIdentity :  ${identity}${newline}Machine: ${machinename}${newline}ProcessId : ${processid}${newline}Process Name : ${processname}${newline}Process Info : ${processinfo}${newline}Thread ID : ${threadid}${newline}Thread Name : ${threadname}${newline}${ExceptionHeader1Layout}" />
    <variable name="FlatFileLongLayout" value="${longdate} ${uppercase:${level}} ${message}    ${newline}" />
    <variable name="FlatFileShortLayout" value="${message} , u ${longdate} !" />



  <!-- the targets to write to -->
  <targets>
    <!-- write logs to file  -->
    <target xsi:type="File" 
            name="allfile" 
            fileName="${basedir}/logs/nlog-all-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

    <!-- another file log, only own logs. Uses some ASP.NET core renderers -->
    <target xsi:type="File" 
            name="ownFile-web" 
            fileName="${basedir}/logs/nlog-own-${shortdate}.log"
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" />
  
    <target xsi:type="File" 
            name="FlatFileAllTrace" 
            layout="${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}"
            fileName="${basedir}/logs/nlog-all-${shortdate}.log" 
            archiveFileName="${basedir}/archives/nlog-all-${shortdate}.{#}.txt" 
            archiveEvery="Monday" 
            archiveNumbering="Rolling" 
            maxArchiveFiles="7" 
            concurrentWrites="true" 
            keepFileOpen="false" 
            encoding="UTF-8" />
            
    <target xsi:type="File" 
            name="ExceptionFileTrace" 
            layout="${ExceptionLayout}" 
            header="${HeaderLayout}" 
            footer="${FooterLayout}" 
            fileName="${basedir}/logs/exceptionLog.txt" 
            archiveFileName="${basedir}/archives/exceptionLog.{#}.txt" 
            archiveEvery="Monday" 
            archiveNumbering="Rolling" 
            maxArchiveFiles="7" 
            concurrentWrites="true" 
            keepFileOpen="false" 
            encoding="UTF-8" />

    <target xsi:type="File" 
            name="FlatFileLongTrace" 
            layout="${FlatFileLongLayout}" 
            header="${HeaderLayout}" 
            footer="${FooterLayout}" 
            fileName="${basedir}/logs/eventLog.txt" 
            archiveFileName="${basedir}/archives/eventLog.{#}.txt" 
            archiveEvery="Monday" 
            archiveNumbering="Rolling" 
            maxArchiveFiles="7" 
            concurrentWrites="true" 
            keepFileOpen="false" 
            encoding="UTF-8" />

    <target xsi:type="File" 
            name="FlatFileShortTrace" 
            layout="${FlatFileShortLayout}" 
            fileName="${basedir}/logs/eventLog.txt" 
            archiveFileName="${basedir}/archives/eventLog.{#}.txt" 
            archiveEvery="Monday" 
            archiveNumbering="Rolling" 
            maxArchiveFiles="7" 
            concurrentWrites="true" 
            keepFileOpen="false" 
            encoding="UTF-8" />
    
  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    <!--All logs, including from Microsoft-->
    <!-- <logger name="*" minlevel="Trace" writeTo="allfile" /> -->

    <!--Skip non-critical Microsoft logs and so log only own logs-->
    <!-- <logger name="Microsoft.*" maxLevel="Info" final="true" /> -->
    <!-- BlackHole without writeTo -->
    <!-- <logger name="*" minlevel="Trace" writeTo="ownFile-web" /> -->
  
    <!--All logs, including from Microsoft and info, but file is too long -->
    <!-- <logger name="*" minlevel="Info" writeTo="FlatFileAllTrace" />  -->

    <logger name="*" minlevel="Warn" writeTo="FlatFileAllTrace" /> 
    <logger name="*" minlevel="Error" writeTo="ExceptionFileTrace" final="true" />
  
  </rules>
</nlog>
